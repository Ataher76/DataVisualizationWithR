aes(color = group),
size = .9
)
plt
plt <- ggplot(
# The ggplot object has associated the data for the highlighted countries
df_mac_indexed_2008 %>% filter(group != "other"),
aes(year, price_rel, group = iso_a3)
) +
# Geometric annotations that play the role of grid lines
geom_vline(
xintercept = seq(2000, 2020, by = 5),
color = "grey91",
size = .6
) +
geom_segment(
data = tibble(y = seq(-4, 3, by = 1), x1 = 2000, x2 = 2020),
aes(x = x1, xend = x2, y = y, yend = y),
inherit.aes = FALSE,
color = "grey91",
size = .6
) +
geom_segment(
data = tibble(y = 0, x1 = 2000, x2 = 2020),
aes(x = x1, xend = x2, y = y, yend = y),
inherit.aes = FALSE,
color = "grey60",
size = .8
) +
geom_vline(
aes(xintercept = ref_year),
color = "grey40",
linetype = "dotted",
size = .8
) +
## Lines for the non-highlighted countries
geom_line(
data = df_mac_indexed_2008 %>% filter(group == "other"),
color = "grey75",
size = .6,
alpha = .5
) +
## Lines for the highlighted countries.
# It's important to put them after the grey lines
# so the colored ones are on top
geom_line(
aes(color = group),
size = .9
)
plt
plt <- plt +
annotate(
"text", x = 2008.15, y = -3.35,
label = "2008",
family = "Lato",
size = 8,
color = "grey40",
hjust = 0
) +
geom_text_repel(
aes(color = group, label = name_lab),
family = "Lato",
fontface = "bold",
size = 8,
direction = "y",
xlim = c(2020.8, NA),
hjust = 0,
segment.size = .7,
segment.alpha = .5,
segment.linetype = "dotted",
box.padding = .4,
segment.curvature = -0.1,
segment.ncp = 3,
segment.angle = 20
) +
## coordinate system + scales
coord_cartesian(
clip = "off",
ylim = c(-4, 3)
) +
scale_x_continuous(
expand = c(0, 0),
limits = c(2000, 2023.5),
breaks = seq(2000, 2020, by = 5)
) +
scale_y_continuous(
expand = c(0, 0),
breaks = seq(-4, 3, by = 1),
labels = glue::glue("{format(seq(-4, 3, by = 1), nsmall = 2)}$")
)
plt
plt <- plt +
scale_color_manual(
values = c(rcartocolor::carto_pal(n = n, name = "Bold")[1:n-1], "grey50")
) +
labs(
title = "Compared to the financial crisis in 2008, how much more or less do you have to pay for a Big Mac today?",
subtitle = "The <i>index chart</i> visualizes the price changes (in USD) of a Big Mac based on a 2008 as index year. The <b>Big Mac Index</b> is published by The Economist as an informal way to provide a test of the<br>extent to which market exchange rates result in goods costing the same in different countries. It <i>seeks to make exchange-rate theory a bit more digestible</i> and takes its name from the Big Mac,<br>a hamburger sold at McDonald's restaurants.",
caption = "Visualization by Cédric Scherer  •  Data by The Economist  •  The index chart shows the 27 countries that provide Big mac prices for all years from 2000 to 2020. In case a country was reported twice per year, the mean value was visualized."
)
plt
install.packages("ggstatsplot")
library(palmerpenguins)
library(tidyverse)
library(palmerpenguins)
library(tidyverse)
library(ggstatsplot)
data("penguins", package = "palmerpenguins")
penguins <- drop_na(penguins)
penguins
plt <- ggbetweenstats(
data = penguins,
x = species,
y = bill_length_mm
)
library(rstantools)
install.packages("rstantools")
library(rstantools)
library(rstantools)
data("penguins", package = "palmerpenguins")
penguins <- drop_na(penguins)
plt <- ggbetweenstats(
data = penguins,
x = species,
y = bill_length_mm
)
plt
#Add title and labels
plt <- plt +
# Add labels and title
labs(
x = "Penguins Species",
y = "Bill Length",
title = "Distribution of bill length across penguins species"
) +
# Customizations
theme(
# This is the new default font in the plot
text = element_text(family = "Roboto", size = 8, color = "black"),
plot.title = element_text(
family = "Lobster Two",
size = 20,
face = "bold",
color = "#2a475e"
),
# Statistical annotations below the main title
plot.subtitle = element_text(
family = "Roboto",
size = 15,
face = "bold",
color="#1b2838"
),
plot.title.position = "plot", # slightly different from default
axis.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12)
)
plt
#Final chart
plt <- plt  +
theme(
axis.ticks = element_blank(),
axis.line = element_line(colour = "grey50"),
panel.grid = element_line(color = "#b4aea9"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dashed"),
panel.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4"),
plot.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4")
)
plt
iris
library(ggstatsplot)
library(rstantools)
library(tidyverse)
drop_na(iris)
irisplot <- ggbetweenstats(
data = iris,
x = species,
y = Sepal.Length
)
irisplot <- ggbetweenstats(
data = iris,
x = Species,
y = Sepal.Length
)
irisplot
ggbetweenstats(
data = iris,
x = Species,
y = Sepal.Length
)
ggbetweenstats(
data = iris,
x = Species,
y = Sepal.Length
)+
labs(
title = "Distribution of Sepal LEngth across species",
x = "Species", y = "Sepal Lenght (mm)")
ggbetweenstats(
data = iris,
x = Species,
y = Sepal.Length
)+
labs(
title = "Distribution of Sepal LEngth across species",
x = "Species", y = "Sepal Lenght (mm)")+
theme(
text = element_text(family = "Roboto", size = 8, colour = "bblack"),
plot.title = element_text(family = "Lobster Two", size = 20, face = "bold", color = "#2a475e")
)
ggbetweenstats(
data = iris,
x = Species,
y = Sepal.Length
)+
labs(
title = "Distribution of Sepal LEngth across species",
x = "Species", y = "Sepal Lenght (mm)")+
theme(
text = element_text(family = "Roboto", size = 8, colour = "black"),
plot.title = element_text(family = "Lobster Two", size = 20, face = "bold", color = "#2a475e")
)
ggbetweenstats(
data = iris,
x = Species,
y = Sepal.Length
)+
labs(
title = "Distribution of Sepal Length across species",
x = "Species", y = "Sepal Lenght (mm)")+
theme(
text = element_text(family = "Roboto", size = 8, colour = "black"),
plot.title = element_text(
family = "Lobster Two", size = 20,
face = "bold", color = "#2a475e"
),
plot.subtitle = element_text(
family = "Roboto", size = 15,
face = "bold", color = "#2a475e"
)
)
ggbetweenstats(
data = iris,
x = Species,
y = Sepal.Length
)+
labs(
title = "Distribution of Sepal Length across species",
x = "Species", y = "Sepal Lenght (mm)")+
theme(
text = element_text(family = "Roboto", size = 8, colour = "black"),
plot.title = element_text(
family = "Lobster Two", size = 20,
face = "bold", color = "#2a475e"
),
plot.subtitle = element_text(
family = "Roboto", size = 15,
face = "bold", color = "#2a475e"
),
plot.title.position = "plot",
axis.text = element_text(size = 10, colour = "black"),
axis.title = element_text(size = 12, colour = "black")
)
ggbetweenstats(
data = iris,
x = Species,
y = Sepal.Length
)+
labs(
title = "Distribution of Sepal Length across species",
x = "Species", y = "Sepal Lenght (mm)")+
theme(
text = element_text(family = "Roboto", size = 8, colour = "black"),
plot.title = element_text(
family = "Lobster Two", size = 20,
face = "bold", color = "#2a475e"
),
plot.subtitle = element_text(
family = "Roboto", size = 15,
face = "bold", color = "#2a475e"
),
plot.title.position = "plot",
axis.text = element_text(size = 10, colour = "black"),
axis.title = element_text(size = 12, colour = "black"),
axis.ticks = element_blank(),
axis.line = element_line(colour = "grey50"),
panel.grid = element_line(colour = "#b4aea9"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dashed", linewidth = 0.8, colour = "grey80"),
panel.background = element_rect(fill = "#fbf9f4", colour = "#fbf9f4"),
plot.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4")
)
ggbetweenstats(
data = iris,
x = Species,
y = Sepal.Length
)+
labs(
title = "Distribution of Sepal Length across species",
x = "Species", y = "Sepal Lenght (mm)")+
theme(
text = element_text(family = "Roboto", size = 8, colour = "black"),
plot.title = element_text(
family = "Lobster Two", size = 20,
face = "bold", color = "#2a475e"
),
plot.subtitle = element_text(
family = "Roboto", size = 15,
face = "bold", color = "#2a475e"
),
plot.title.position = "plot",
axis.text = element_text(size = 10, colour = "black"),
axis.title = element_text(size = 12, colour = "black"),
axis.ticks = element_blank(),
axis.line = element_line(colour = "grey50"),
panel.grid = element_line(colour = "#b4aea9"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dashed", linewidth = 0.5),#, colour = "grey80"),
panel.background = element_rect(fill = "#fbf9f4", colour = "#fbf9f4"),
plot.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4")
)
data("penguins", package = "palmerpenguins")
penguins <- drop_na(penguins)
plt <- ggbetweenstats(
data = penguins,
x = species,
y = bill_length_mm
)
#Add title and labels
plt <- plt +
# Add labels and title
labs(
x = "Penguins Species",
y = "Bill Length",
title = "Distribution of bill length across penguins species"
) +
# Customizations
theme(
# This is the new default font in the plot
text = element_text(family = "Roboto", size = 8, color = "black"),
plot.title = element_text(
family = "Lobster Two",
size = 20,
face = "bold",
color = "#2a475e"
),
# Statistical annotations below the main title
plot.subtitle = element_text(
family = "Roboto",
size = 15,
face = "bold",
color="#1b2838"
),
plot.title.position = "plot", # slightly different from default
axis.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12)
)
#Final chart
plt <- plt  +
theme(
axis.ticks = element_blank(),
axis.line = element_line(colour = "grey50"),
panel.grid = element_line(color = "#b4aea9"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dashed"),
panel.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4"),
plot.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4")
)
plt
setwd("D:/Project Work/Others")
ggsave("NewBoxplot.png", plt, dpi = 1000, height = 7, width = 7)
ggsave("NewBoxplot.png", plt, dpi = 1000, height = 5, width = 6)
ggsave("NewBoxplot.png", plt, dpi = 1000, height = 6, width = 6)
#Add title and labels
plt <- plt +
# Add labels and title
labs(
x = "Penguins Species",
y = "Bill Length",
title = "Boxplot of Penguines"
) +
# Customizations
theme(
# This is the new default font in the plot
text = element_text(family = "Roboto", size = 8, color = "black"),
plot.title = element_text(
family = "Lobster Two",
size = 15,
face = "bold",
color = "#2a475e"
),
# Statistical annotations below the main title
plot.subtitle = element_text(
family = "Roboto",
size = 12,
face = "bold",
color="#1b2838"
),
plot.title.position = "plot", # slightly different from default
axis.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12)
)
plt <- ggbetweenstats(
data = penguins,
x = species,
y = bill_length_mm
)
#Add title and labels
plt <- plt +
# Add labels and title
labs(
x = "Penguins Species",
y = "Bill Length",
title = "Boxplot of Penguines"
) +
# Customizations
theme(
# This is the new default font in the plot
text = element_text(family = "Roboto", size = 8, color = "black"),
plot.title = element_text(
family = "Lobster Two",
size = 15,
face = "bold",
color = "#2a475e"
),
# Statistical annotations below the main title
plot.subtitle = element_text(
family = "Roboto",
size = 12,
face = "bold",
color="#1b2838"
),
plot.title.position = "plot", # slightly different from default
axis.text = element_text(size = 10, color = "black"),
axis.title = element_text(size = 12)
)
#Final chart
plt <- plt  +
theme(
axis.ticks = element_blank(),
axis.line = element_line(colour = "grey50"),
panel.grid = element_line(color = "#b4aea9"),
panel.grid.minor = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dashed"),
panel.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4"),
plot.background = element_rect(fill = "#fbf9f4", color = "#fbf9f4")
)
ggsave("NewBoxplot.png", plt, dpi = 1000, height = 6, width = 6)
msleep %>%
group_by(order) %>%
summarise(mean_sleep = mean(sleep_total)) %>%
mutate(order = fct_reorder(order, mean_sleep)) %>%
ggplot(aes(order, mean_sleep, color = order))+
geom_point(size = 4, show.legend = F)+
geom_segment(aes(order, mean(msleep$sleep_total),
xend = order, yend = mean_sleep), show.legend = F)+
geom_hline(yintercept = mean(msleep$sleep_total),
size = 0.8, color = "grey")+
#geom_text(aes( label = mean_sleep, vjust = 1), show.legend = F)+
theme_classic()+
coord_flip()+
theme(axis.title = element_text(colour = "black"),
axis.text = element_text(colour = "black"),
axis.text.x = element_text(angle = 90),
axis.ticks = element_line(colour = "black")
)+
labs(x = "Order", y = "Mean Sleep")
msleep %>%
group_by(order) %>%
summarise(mean_sleep = mean(sleep_total)) %>%
mutate(order = fct_reorder(order, mean_sleep)) %>%
ggplot(aes(order, mean_sleep, color = order))+
geom_point(size = 4, show.legend = F)+
geom_segment(aes(order, mean(msleep$sleep_total),
xend = order, yend = mean_sleep), show.legend = F)+
geom_hline(yintercept = mean(msleep$sleep_total),
size = 0.8, color = "grey")+
#geom_text(aes( label = mean_sleep, vjust = 1), show.legend = F)+
theme_classic()+
#coord_flip()+
theme(axis.title = element_text(colour = "black"),
axis.text = element_text(colour = "black"),
axis.text.x = element_text(angle = 90),
axis.ticks = element_line(colour = "black")
)+
labs(x = "Order", y = "Mean Sleep")
loli <- msleep %>%
group_by(order) %>%
summarise(mean_sleep = mean(sleep_total)) %>%
mutate(order = fct_reorder(order, mean_sleep)) %>%
ggplot(aes(order, mean_sleep, color = order))+
geom_point(size = 4, show.legend = F)+
geom_segment(aes(order, mean(msleep$sleep_total),
xend = order, yend = mean_sleep), show.legend = F)+
geom_hline(yintercept = mean(msleep$sleep_total),
size = 0.8, color = "grey")+
#geom_text(aes( label = mean_sleep, vjust = 1), show.legend = F)+
theme_classic()+
#coord_flip()+
theme(axis.title = element_text(colour = "black"),
axis.text = element_text(colour = "black"),
axis.text.x = element_text(angle = 90),
axis.ticks = element_line(colour = "black")
)+
labs(x = "Order", y = "Mean Sleep")
ggsave("Lolipop.png", loli, dpi = 1000, height = 5, width = 6 )
ggsave("Lolipop.png", loli, dpi = 1000, height = 4, width = 6 )
